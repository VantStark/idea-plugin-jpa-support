#if(!$package.isEmpty())
package $package;

#end
#if($useLombok)
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
#end
import javax.validation.Valid;
#if(!$tablesConfig.servicePackageName.isEmpty())
import ${tablesConfig.servicePackageName}.${table.serviceName};
#end
#if(!$tablesConfig.voPackageName.isEmpty())
import ${tablesConfig.voPackageName}.${entitySimpleName}VO;
import ${tablesConfig.voPackageName}.${entitySimpleName}UpdateVO;
import ${tablesConfig.voPackageName}.${entitySimpleName}QueryVO;
#end
#if(!$tablesConfig.dtoPackageName.isEmpty())
import ${tablesConfig.dtoPackageName}.${entitySimpleName}DTO;
#end
import org.springframework.beans.factory.annotation.Autowired;
#if($useJPA)
import org.springframework.data.domain.Page;
#end
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
#if($useMybatisPlus)
import com.baomidou.mybatisplus.core.metadata.IPage;
#end
#if($useTkMybatis)
import import com.github.pagehelper.Page;
#end

#if($useLombok)
@Api(tags = "$comment")
#end
@Validated
@RestController
@RequestMapping("/$basePath")
public class ${simpleName} {

    @Autowired
    private $serviceName $serviceVariableName;

    @PostMapping
    #if($useLombok)
    @ApiOperation("$save $comment")
    #end
    public String save(@Valid @RequestBody ${entitySimpleName}VO vo) {
        return ${serviceVariableName}.save(vo).toString();
    }

    @DeleteMapping("/{id}")
    #if($useLombok)
    @ApiOperation("$delete $comment")
    #end
    public void delete(@Valid @NotNull #if($useLombok)@ApiParam("id")#end @PathVariable("id") $primaryKeyDataType id) {
        ${serviceVariableName}.delete(id);
    }

    @PutMapping("/{id}")
    #if($useLombok)
    @ApiOperation("$update $comment")
    #end
    public void update(@Valid @NotNull #if($useLombok)@ApiParam("id")#end @PathVariable("id") $primaryKeyDataType id,
    @Valid @RequestBody ${entitySimpleName}UpdateVO vo) {
        ${serviceVariableName}.update(id, vo);
    }

    @GetMapping("/{id}")
    #if($useLombok)
    @ApiOperation("$getById $comment")
    #end
    public ${entitySimpleName}DTO getById(@Valid @NotNull #if($useLombok)@ApiParam("id")#end @PathVariable("id") $primaryKeyDataType id) {
        return ${serviceVariableName}.getById(id);
    }

    @GetMapping
    #if($useLombok)
    @ApiOperation("$query $comment")
    #end
    #if($useJPA)
    public Page<${entitySimpleName}DTO> query(@Valid ${entitySimpleName}QueryVO vo) {
    #end
    #if($useMybatisPlus)
    public IPage<${entitySimpleName}DTO> query(@Valid ${entitySimpleName}QueryVO vo) {
    #end
    #if($useTkMybatis)
    public Page<${entitySimpleName}DTO> query(@Valid ${entitySimpleName}QueryVO vo) {
    #end
        return ${serviceVariableName}.query(vo);
    }
}
